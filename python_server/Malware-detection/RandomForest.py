import  extract
# Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from joblib import dump


# Importing the dataset
dataset = pd.read_csv('data.csv', sep = '|')
X = dataset.drop(['Name', 'md5', 'legitimate'], axis = 1).values
y = dataset['legitimate'].values

# Splitting the dataset into the Training set and Test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)

# Feature Scaling
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

from sklearn.ensemble import RandomForestClassifier
classifier = RandomForestClassifier(n_estimators = 50, criterion = 'entropy', random_state = 0)
classifier.fit(X_train, y_train)

y_pred = classifier.predict(y_test)

# dump model
dump(classifier,"malware_detection_classifier.joblib")

# analyze 

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
print(f"Confusion Matrix : {cm}")
accuracy = classifier.score(y_test, y_pred)
print(f"Accuracy score : {accuracy}")


#predict the test results
path = "test.exe"
input_features = extract.extract_infos(path)
input_features = sc.transform([input_features[2:]])
print("Features extarcted : {input_features}")
print("Result : ")
print(classifier.predict(input_features))
print("Probability :")
print(classifier.predict_proba(input_features))
